user  nginx; # nginxというユーザとしてアクセス
worker_processes auto; # リクエストを処理するためのプロセス数？

events { worker_connections 1024; } # 同時接続できるクライアント数

http {
  # 基本
  include       /etc/nginx/mime.types; # ファイル拡張子によってContent-typeを設定
  default_type  application/octet-stream;
  sendfile      on;
  tcp_nopush    on;
  keepalive_timeout 65; # 65秒間は接続をキープ

  # 圧縮 1KB以上の平文, CSS, JS, JSONなどはgzipして配信
  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;
  gzip_min_length 1024;

  # nginxからのリバースプロキシ先の名前解決的
  upstream next_app {
    server next:3000;
    keepalive 32;
  }
  upstream api_app {
    server api:8000;
    keepalive 32;
  }

  server {
    listen 80;
    server_name _;
	#location = /healthz { return 200 'ok'; add_header Content-Type text/plain; }
    #return 301 https://$host$request_uri;
  #}

  # --- 443でTLS終端（HTTP/2） ---
  #server {
   # listen 443 ssl http2;
   # server_name _;

    # ★ 証明書と鍵（Dockerfileで /etc/nginx/certs に置いた想定）
   # ssl_certificate     /etc/nginx/certs/server.crt;
   # ssl_certificate_key /etc/nginx/certs/server.key;

    # ★ TLS方針（自己署名でも問題ない範囲の無難設定）
   # ssl_protocols TLSv1.2 TLSv1.3;
   # ssl_prefer_server_ciphers off;
   # ssl_session_cache   shared:ssl:10m;
   # ssl_session_timeout 1d;
    # staplingは自己署名なのでOFF推奨（中間CAがない）
   # ssl_stapling off;

    # ヘルスチェック
    location = /health_nginx { return 200 'ok'; add_header Content-Type text/plain; }

    # --- 静的直配信（あとで有効化） ---
    # _next/static は immutable 長期キャッシュが基本
    # location ^~ /_next/static/ {
    #   root /var/www/site;
    #   try_files $uri =404;
    #   add_header Cache-Control "public, max-age=31536000, immutable";
    # }
    # public配下（/robots.txt, /favicon.ico, /images/**）
    # location / {
    #   root /var/www/site/public;
    #   try_files $uri @next;
    # }

    # API は FastAPI へ
    location ^~ /api/ {
      proxy_pass http://api_app;
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 60s;
    }

    # それ以外は Next（SSR/SSG/画像最適化など）
    location @next {
      proxy_pass http://next_app;
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    location / { try_files $uri @next; }
  }
}
